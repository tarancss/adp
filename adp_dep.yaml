# mongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: adp
spec:
  selector:
    matchLabels:
      app: adp-mongo
  # replicas: 1
  serviceName: adp-mongo  
  template:
    metadata:
      labels:
        app: adp-mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:        
      - name: mongo
        image: mongo:4.2.3-bionic
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
        - name: data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Mi          
---
# RabbitMQ
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: broker
  labels:
    app: adp
spec:
  selector:
    matchLabels:
      app: adp-rmq
  # replicas: 1
  serviceName: adp-rmq
  template:
    metadata:
      labels:
        app: adp-rmq
    spec:
      terminationGracePeriodSeconds: 10
      containers:        
      - name: rmq
        image: rabbitmq:3.8.3
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: http
        volumeMounts:
        - name: data
          mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Mi
---
# deploy wallet
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallet
  labels:
    app: adp
spec:
  selector:
    matchLabels:
      app: adp-wallet
  replicas: 2  # use 2 replicas for a moderate usage of the wallet's API
  template:
    metadata:
      labels:
        app: adp-wallet
    spec:
      containers:        
      - name: wallet
        image: adp_wallet:1.0.0
        ports:
        - containerPort: 3030
          name: http
        env:
        - name: ADP_MBCONN
          value:  amqp://guest:guest@adp-rmq:5672 # k8s DNS will resolve adp-rmq to the IP of the container running RabbitMQ
        - name: ADP_DBCONN
          value: mongodb://adp-mongo # k8s DNS will resolve adp-mongo to the IP of the container running MongoDB
---
# deploy explorer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: explorer
  labels:
    app: adp
spec:
  selector:
    matchLabels:
      app: adp-explorer
  # replicas: 1
  template:
    metadata:
      labels:
        app: adp-explorer
    spec:
      containers:        
      - name: explorer
        image: adp_explorer:1.0.0
        ports:
        - containerPort: 3030
          name: http
        env:
        - name: ADP_MBCONN
          value:  amqp://guest:guest@adp-rmq:5672
        - name: ADP_DBCONN
          value: mongodb://adp-mongo           